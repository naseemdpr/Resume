{"version":3,"sources":["image/mypic.jpg","serviceWorker.js","components/mycomp.js/mycomp.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","MyComp","style","color","backgroundColor","height","borderColor","Component","App","className","src","logo","alt","width","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,uJCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCjBeC,G,6KAEb,OACA,6BAEQ,6BAAK,2BAAG,yCACR,+CACA,wBAAIC,MAAO,CACXC,MAAO,UACPC,gBAAiB,UACjBC,OAAQ,IACRC,YAAc,aAElB,2BAAG,2BAAG,uCACN,0FACA,0EACA,+CACA,wBAAIJ,MAAO,CACPC,MAAO,UACPC,gBAAiB,UACjBC,OAAQ,IACRC,YAAc,aAElB,2BAAG,2BAAG,0CACN,sDAAiC,2BAAG,uFAAkE,mIACtG,2DAAwC,2BAAG,qMAAgP,yDAC3R,0DAAyC,2BAAG,sFAAiE,6CAC7G,wBAAIJ,MAAO,CACPC,MAAO,UACPC,gBAAiB,UACjBC,OAAQ,IACRC,YAAc,aAElB,2BAAG,2BAAG,wCACN,6BAAK,6DAAL,0GAAqJ,+HACrJ,wBAAIJ,MAAO,CACPC,MAAO,UACPC,gBAAiB,UACjBC,OAAQ,IACRC,YAAc,aAElB,2BAAG,2BAAG,wCACN,iKACA,wEACA,uJACA,0K,GA7CwBC,c,gBCKfC,E,uKAEnB,OACI,yBAAKC,UAAU,OACb,yBAAKC,IAAKC,IAAMC,IAAI,QAAQC,MAAM,QAClC,kBAAC,EAAD,W,GALyBN,aCDjCO,IAASC,OAEL,kBAAC,EAAD,MAEDC,SAASC,eAAe,SH0HrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.fe530ffa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypic.917d0da8.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\"\r\nexport default class MyComp extends Component{\r\n    render(){\r\n        return(\r\n        <div>\r\n                \r\n                <div><h><b>M Naseem</b></h></div>\r\n                <div>Student, Btech</div>\r\n                <hr style={{\r\n                color: '#000000',\r\n                backgroundColor: '#000000',\r\n                height: .25,\r\n                borderColor : '#000000'\r\n            }}/>\r\n            <h><u><b>SKILLS</b></u></h>\r\n            <div>Languages&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:C++,Java,JavaScript</div>\r\n            <div>Web Technology&nbsp;: HTML,Node.js,React.js</div>\r\n            <div>Tools: VS Code</div>\r\n            <hr style={{\r\n                color: '#000000',\r\n                backgroundColor: '#000000',\r\n                height: .25,\r\n                borderColor : '#000000'\r\n            }}/>\r\n            <h><u><b>EDUCATION</b></u></h>\r\n            <div>2016-2020&nbsp;&nbsp;&nbsp;:<h><b>Vimal Jyothi Engineering College chemperi,Kerala, India</b></h><div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;B.Tech, Electronics and Communication Engineering</div></div>\r\n            <div>2014-2016&nbsp;&nbsp;&nbsp;&nbsp;: <h><b>GHSS Manathana, Kannur, Kerala, India&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></h><div>Higher Secondary School</div></div>\r\n            <div>2014&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;: <h><b>St:Joseph's High School Peravoor,Kannur, Kerala, India</b></h><div>High School</div></div>\r\n            <hr style={{\r\n                color: '#000000',\r\n                backgroundColor: '#000000',\r\n                height: .25,\r\n                borderColor : '#000000'\r\n            }}/>\r\n            <h><u><b>PROJECT</b></u></h>\r\n            <div><b>Real Time Bus Status Indicator</b>&nbsp;&nbsp;:This project suggests a new tool that incorporates live applications that the community needs.<div> The public transport live indicator device takes the available database of current bus time.</div></div>\r\n            <hr style={{\r\n                color: '#000000',\r\n                backgroundColor: '#000000',\r\n                height: .25,\r\n                borderColor : '#000000'\r\n            }}/>\r\n            <h><u><b>CONTACT</b></u></h>\r\n            <div>Phone&nbsp;&nbsp;&nbsp;:9495953987&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <div>Email&nbsp;&nbsp;&nbsp;:naseem12brh@gmail.com</div>\r\n            <div>Instagram&nbsp;&nbsp;&nbsp;:_naseem_ibrahim_&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n            <div>Facebook&nbsp;&nbsp;&nbsp;:Naseem Nasi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\r\n        </div>\r\n        )\r\n    }\r\n}","import React, {Component} from \"react\";\nimport './App.css';\nimport MyComp from \"./components/mycomp.js/mycomp\";\nimport logo from \"./image/mypic.jpg\";\n\n\nexport default class App extends Component{\n  render(){\n  return (\n      <div className=\"App\">\n        <img src={logo} alt=\"Mypic\" width=\"200\"/>\n        <MyComp/>\n      </div>\n  )\n}\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nReactDOM.render(\n\n    <App/>\n \n  ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}